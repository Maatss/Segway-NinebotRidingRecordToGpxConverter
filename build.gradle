plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

group 'org.mats'
version '1.4.1'

application.mainClassName = "com.Main"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://nexus.gluonhq.com/nexus/content/repositories/releases"
    }
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
    version = '11.0.+'
}

task cleanResources {
    doLast {
        delete "build/classes/java/main/fxml"
        delete "build/classes/java/main/images"
        delete "build/classes/java/main/css"
    }
}

task copyResources {
    doLast {
        copy {
            from "build/resources/main/fxml"
            into "build/classes/java/main/fxml"
        }
        copy {
            from "build/resources/main/images"
            into "build/classes/java/main/images"
        }
        copy {
            from "build/resources/main/css"
            into "build/classes/java/main/css"
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.Main'
    }
    from('src/main/java') {
        include  '**/*.fxml'
        include  '**/*.css'
        include  '**/*.png'
        include  '**/*.ico'
    }
}

task packageDistribution(type: Zip) {
    group "launch4j"

    // Clean up previous distribution
    delete "build/dist"

    // Copy program files and jre to distribution folder
    copy {
        from "build/launch4j"
        into "build/dist"
    }
    copy {
        from "jre"
        into "build/dist/jre"
    }
    copy {
        from "LICENSE"
        into "build/dist"
    }

    // Zip the distribution folder
    from "build/dist"
    archiveFileName = "${rootProject.name}-${rootProject.version}.zip"
    destinationDirectory = file("build")
}

launch4j {
    headerType = "gui" // Creates only a fx window
//    headerType = "console" // Creates both a fx window and a console window which shows System.out
    mainClassName = "com.Main"
    outfile = "${rootProject.name}.exe"
    jar = "lib/${rootProject.name}-${rootProject.version}.jar"
    bundledJrePath = "jre"
    bundledJre64Bit = true
    jreMinVersion = '11'
    icon = "${projectDir}/src/main/resources/images/SegwayTrackToGPXConverter.ico"
}

dependencies {
    compile 'com.gluonhq:charm-glisten:6.0.6'
    compile 'com.gluonhq.attach:util:4.0.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}


tasks.createExe.dependsOn(cleanResources)
tasks.packageDistribution.dependsOn(createExe)